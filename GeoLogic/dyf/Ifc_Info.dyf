{
  "Uuid": "f331999e-cb3e-4969-94fc-4f407377dd6a",
  "IsCustomNode": true,
  "Category": "GeoLogic.IFC",
  "Description": "Gets some basic information of an ifc file given its path as a string",
  "Name": "Ifc_Info",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "filepath",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7c32f24e57b14758a6d5f1694e76322e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e24ebbc030e24cf29020929d7eae612c",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "info",
      "Id": "bdf549332e754dee939250deb8c2e587",
      "Inputs": [
        {
          "Id": "300668fd8c2345bf8acde38973328e09",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Eine Funktionsausgabe zur Verwendung mit benutzerdefinierten Blöcken"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];\na[1];",
      "Id": "57598b5becba48e6b67363d9a0ed2c24",
      "Inputs": [
        {
          "Id": "43489337fba6487a8fed9b275137a104",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ca65bc7937842ba92bafbbf38cf91fe",
          "Name": "",
          "Description": "Wert des Ausdrucks in Zeile 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ae78366753249c3b2b7655f5c7cfe5d",
          "Name": "",
          "Description": "Wert des Ausdrucks in Zeile 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ermöglicht die direkte Erstellung von DesignScript-Code."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "debug",
      "Id": "2eec2aaa442b4756b90fb1879538d4ee",
      "Inputs": [
        {
          "Id": "f0fc534e52d243bba6598d55b27542ec",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Eine Funktionsausgabe zur Verwendung mit benutzerdefinierten Blöcken"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node is developed by Johannes Beck, 2022.\r\n# Contact: geotechnicalbim@gmail.com\r\n\r\n# Imports for Revit / Dynamo\r\n# Append path for site packages\r\ndebug = {}\r\nimport System\r\nimport sys\r\n\r\ntry:    \r\n    dirAppLoc = System.Environment.GetFolderPath(System.Environment.SpecialFolder.LocalApplicationData) \r\n    folder = (dirAppLoc + r'\\python-3.8.3-embed-amd64\\Lib\\site-packages')\r\n    sys.path.append(folder)\r\nexcept FileNotFoundError as err:\r\n    debug.update({\"ImportErrorPath\" : \"site-packages folder not found in {0}. Please install all a custom python package first, e.g. pandas. Therefore follow the instructions on  https://github.com/DynamoDS/Dynamo/wiki/Customizing-Dynamo's-Python-3-installation \".format(folder)})\r\n\r\n# for rollout, add used modules in \"used_modules\" list. It is checked, if the modules can be imported and if not, a message is added to the debug output.\r\nused_modules = [\"clr\", \"os\", \"ifcopenshell\", \"collections\"]\r\ntry:\r\n    import sys\r\n    import clr\r\n    import os\r\n    import ifcopenshell\r\n    from collections import Counter\r\nexcept ImportError as err:\r\n    debug.update({\"ImportError\": \"A Python Module was not found - See ImportErrorInfo. Please install. For help on using external packages see https://github.com/DynamoDS/Dynamo/wiki/Customizing-Dynamo's-Python-3-installation\".format(used_module)})\r\n    debug.update({\"ImportErrorInfo\": \"{}\".format(err)})\r\n\r\n\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Color Nodes from Dynamo\r\nclr.AddReference('DSCoreNodes')\r\nimport DSCore\r\nfrom DSCore import Color\r\n\r\n# Import GeometryColor _ Display in Dynamo\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n# Import RevitNodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\n\r\n# Import Revit elements\r\nfrom Revit.Elements import *\r\nimport System\r\n\r\n# Import DocumentManager and Transaction Manger\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\n# Revit API Usier Ingerfavce\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import *\r\n\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc=DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n#Preparing input from dynamo to revit\r\n#element = UnwrapElement(IN[0])\r\n#TransactionManager.Instance.EnsureInTransaction(doc)\r\n#TransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign Inputs IN of the python node\r\ninput0 = IN[0]\r\nif len(IN) > 1:\r\n    options = IN[1]\r\n    if \"wfm_in\" in options.keys():\r\n        wfm_in = options[\"wfm_in\"]\r\n    if not bool(wfm_in) or type(wfm_in)!=int:    \r\n        try:\r\n            wfm_in = int(wfm_in)\r\n        except:\r\n            wfm_in = 0               \r\nelse: wfm_in = 0\r\n\r\n# Allows nested lists / dicts / tuples in the input 0. Two dimensonal only. \r\nif not hasattr(input0, '__iter__') or type(input0) == str:\r\n    to_be_flattend = True\r\n    input0 = [input0]\r\n    out0 = [[]]\r\n    debug.update({\"on input\":\"input was not a list. Was converted\"})\r\nelse: \r\n    to_be_flattend = False\r\n    out0 = []\r\n\r\n\r\ntry:\r\n    out0=[]\r\n    filepaths = input0\r\n    for ind_file in range(len(filepaths)):\r\n        filepath = filepaths[ind_file]\r\n        ifc_info = {}\r\n        ifc_file = ifcopenshell.open(filepath)\r\n        schema = ifcopenshell.ifcopenshell_wrapper.schema_by_name(ifc_file.schema)        \r\n        filesize = os.path.getsize(filepath)/1048576 #bytes to mb\r\n        anz_products = len(ifc_file.by_type('IfcProduct'))\r\n        anz_buildingelem = len(ifc_file.by_type('IfcBuildingElement'))\r\n        anz_proj = len(ifc_file.by_type('IfcProject'))\r\n        anz_site = len(ifc_file.by_type('IfcSite'))\r\n        ifc_project_line = str(ifc_file.by_type('IfcProject')[0])        \r\n        \r\n        \r\n        ifc_info.update({\r\n        \"ifc schema\":schema, \r\n        \"file path\": filepath,\r\n        \"file size\": filesize,\r\n        \"count ifc products\": anz_products,\r\n        \"count ifc building elements\": anz_buildingelem,\r\n        \"count ifc project\": anz_proj,\r\n        \"count ifc site\": anz_site\r\n        })\r\n        \r\n        \r\n        out0.append(ifc_info)\r\n\r\n\r\nexcept (ZeroDivisionError, ValueError, IndexError, AttributeError, NameError, OSError) as err:\r\n    debug.update({\"Error\":err})\r\ndebug.update({\r\n\"wfm_out\" : wfm_in +1,\r\n\"info\" : \"Node uses ifcopenshell. Please if not installed, download the right one at: http://ifcopenshell.org/python and put the unziped folder in your site package folder. For documentation see https://ifcopenshell.github.io/docs/python/html/ifcopenshell-python/api-documentation.html\",\r\n\"tip\" : \"Don´t use dynamo on large files.\"\r\n})\r\n\r\nif to_be_flattend==True:\r\n    out0 = out0[0]\r\n\r\n\r\nOUT = out0, debug\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "871abcdce7d84250b4a1aedbeef14ab2",
      "Inputs": [
        {
          "Id": "7e31b4f10554411d88b73d980657b2fe",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "009f9e845ded404ea3fbade134933445",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f876561605145fba1d3c50bb97ce01b",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "options",
        "TypeName": "DesignScript.Builtin.Dictionary",
        "TypeRank": 0,
        "DefaultValue": "DesignScript.Builtin.Dictionary.ByKeysValues([\"wfm_in\"], [0])",
        "Description": ""
      },
      "Id": "122cb528a76d41b39eb8147e3b69c7a1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1d814e5309304974881463cc31128549",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Funktionsparameter zur Verwendung mit benutzerdefinierten Blöcken.\r\n\r\nSie können den Typ und den Vorgabewert für den Parameter angeben, z. B.\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "e24ebbc030e24cf29020929d7eae612c",
      "End": "7e31b4f10554411d88b73d980657b2fe",
      "Id": "f5e3acca389e4fad8a698f91294f18c9"
    },
    {
      "Start": "4ca65bc7937842ba92bafbbf38cf91fe",
      "End": "300668fd8c2345bf8acde38973328e09",
      "Id": "d78da20d8c1c4657a55c2d8e53c3873f"
    },
    {
      "Start": "0ae78366753249c3b2b7655f5c7cfe5d",
      "End": "f0fc534e52d243bba6598d55b27542ec",
      "Id": "d14075690ebc43ff9287bad9465fb53f"
    },
    {
      "Start": "6f876561605145fba1d3c50bb97ce01b",
      "End": "43489337fba6487a8fed9b275137a104",
      "Id": "86f747fa1c7d4dcd92cb9e1ace4e4c3d"
    },
    {
      "Start": "1d814e5309304974881463cc31128549",
      "End": "009f9e845ded404ea3fbade134933445",
      "Id": "a1368c4fc9324cfcbb7bcca299e8692e"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Hintergrundvorschau",
      "EyeX": 19.27033805847168,
      "EyeY": 46.966411590576172,
      "EyeZ": 34.360054016113281,
      "LookX": -24.27033805847168,
      "LookY": -35.966411590576172,
      "LookZ": -42.360054016113281,
      "UpX": -0.2022031843662262,
      "UpY": 0.91354572772979736,
      "UpZ": -0.35291385650634766
    },
    "NodeViews": [
      {
        "Id": "7c32f24e57b14758a6d5f1694e76322e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -28.0,
        "Y": -49.0
      },
      {
        "Id": "bdf549332e754dee939250deb8c2e587",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 656.0,
        "Y": -45.0
      },
      {
        "Id": "57598b5becba48e6b67363d9a0ed2c24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 440.0,
        "Y": -29.0
      },
      {
        "Id": "2eec2aaa442b4756b90fb1879538d4ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 651.0,
        "Y": 24.0
      },
      {
        "Id": "871abcdce7d84250b4a1aedbeef14ab2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "get ifc info",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 274.14614687036533,
        "Y": -29.564129159790411
      },
      {
        "Id": "122cb528a76d41b39eb8147e3b69c7a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -536.0,
        "Y": 54.0
      }
    ],
    "Annotations": [
      {
        "Id": "e153e8be24144ca5b92b86e91ec9db51",
        "Title": "INPUT",
        "Nodes": [
          "7c32f24e57b14758a6d5f1694e76322e",
          "122cb528a76d41b39eb8147e3b69c7a1"
        ],
        "Left": -546.0,
        "Top": -102.0,
        "Width": 746.0,
        "Height": 233.0,
        "FontSize": 36.0,
        "InitialTop": -49.0,
        "InitialHeight": 248.0,
        "TextblockHeight": 43.0,
        "Background": "#FF848484"
      },
      {
        "Id": "674a8ea0d7cf4ac9abb1d4e9fa686692",
        "Title": "get ifc info using ifcopenshell",
        "Nodes": [
          "57598b5becba48e6b67363d9a0ed2c24",
          "871abcdce7d84250b4a1aedbeef14ab2"
        ],
        "Left": 264.14614687036533,
        "Top": -125.56412915979041,
        "Width": 296.85385312963467,
        "Height": 226.0,
        "FontSize": 36.0,
        "InitialTop": -29.564129159790411,
        "InitialHeight": 145.56412915979041,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ad13c5c34206400b9361ff7a6a37814a",
        "Title": "OUTPUT",
        "Nodes": [
          "bdf549332e754dee939250deb8c2e587",
          "2eec2aaa442b4756b90fb1879538d4ee"
        ],
        "Left": 641.0,
        "Top": -98.0,
        "Width": 144.49,
        "Height": 190.0,
        "FontSize": 36.0,
        "InitialTop": -45.0,
        "InitialHeight": 214.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      }
    ],
    "X": 508.0,
    "Y": 358.0,
    "Zoom": 1.0
  }
}