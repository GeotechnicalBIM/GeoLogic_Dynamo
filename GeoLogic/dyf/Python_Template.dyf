{
  "Uuid": "88786a4c-b3a7-4b33-b2e1-e4791eaec07e",
  "IsCustomNode": true,
  "Category": "GeoLogic.Utils",
  "Description": "This node contains a general python template for working with Revit / Dynamo",
  "Name": "Python_Template",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Autodesk.DesignScript.Geometry.Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "Revit.Elements.Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "DirectShape": {
        "Key": "Revit.Elements.DirectShape",
        "Value": "RevitNodes.dll"
      },
      "Revit.Material": {
        "Key": "Revit.Elements.Material",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Material": {
        "Key": "Revit.Elements.Material",
        "Value": "RevitNodes.dll"
      },
      "Autodesk.DesignScript.Geometry.Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "Color": {
        "Key": "DSCore.Color",
        "Value": "DSCoreNodes.dll"
      },
      "Cuboid": {
        "Key": "Autodesk.DesignScript.Geometry.Cuboid",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "python_out",
      "Id": "833d4823542644eea5b5bd00c0c5b33b",
      "Inputs": [
        {
          "Id": "5deef97b8c7745c29e951a04f1f5bf79",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Eine Funktionsausgabe zur Verwendung mit benutzerdefinierten Blöcken"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "AboutThisNode",
      "Id": "2a6daab1d25746b7a8b88c26be10401d",
      "Inputs": [
        {
          "Id": "99967937c4e241f89a234c2c26057778",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Eine Funktionsausgabe zur Verwendung mit benutzerdefinierten Blöcken"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"This node contains my personal python template for Dynamo / Revit.\nIt can be used for the regular python node following the steps documented here:\nhttps://primer.dynamobim.org/10_Custom-Nodes/10-6_Python-Templates.html\";",
      "Id": "a9227f020aae47a68b8746e9f9e97f8d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "02afe442df684b99a1ede3291bbd7399",
          "Name": "",
          "Description": "Wert des Ausdrucks in Zeile 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ermöglicht die direkte Erstellung von DesignScript-Code."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node is developed by Johannes Beck, 2022.\r\n# Contact: geotechnicalbim@gmail.com\r\n\r\n\r\n# Imports for Revit / Dynamo\r\n# Append path for site packages\r\ndebug = {}\r\nimport System\r\nimport sys\r\n\r\ntry:    \r\n    dirAppLoc = System.Environment.GetFolderPath(System.Environment.SpecialFolder.LocalApplicationData) \r\n    folder = (dirAppLoc + r'\\python-3.8.3-embed-amd64\\Lib\\site-packages')\r\n    sys.path.append(folder)\r\nexcept FileNotFoundError as err:\r\n    debug.update({\"ImportErrorPath\" : \"site-packages folder not found in {0}. Please install all a custom python package first, e.g. pandas. Therefore follow the instructions on  https://github.com/DynamoDS/Dynamo/wiki/Customizing-Dynamo's-Python-3-installation \".format(folder)})\r\n\r\ntry:\r\n    import clr\r\n    import os\r\n    #import math\r\n    #import itertools\r\n    #import time\r\n    #import pandas as pd\r\n    #import numpy as np\r\n    #import scipy\r\nexcept ImportError as err:\r\n    debug.update({\"ImportError\": \"A Python Module was not found - See ImportErrorInfo. Please install. For help on using external packages see https://github.com/DynamoDS/Dynamo/wiki/Customizing-Dynamo's-Python-3-installation\".format(used_module)})\r\n    debug.update({\"ImportErrorInfo\": \"{}\".format(err)})\r\n    \r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript.Geometry import Point as DynamoPoint\r\n\r\n# Color Nodes from Dynamo\r\nclr.AddReference('DSCoreNodes')\r\nimport DSCore\r\nfrom DSCore import Color\r\n\r\n# Import GeometryColor _ Display in Dynamo\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n# Import RevitNodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\n\r\n# Import Revit elements\r\nfrom Revit.Elements import *\r\nimport System\r\n\r\n# Import DocumentManager and Transaction Manger\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\n# Revit API User Ingerface\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import *\r\n\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc=DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n#Preparing input from dynamo to revit\r\n#element = UnwrapElement(IN[0])\r\n#TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n#_________________________________________________\r\n# Assign Inputs IN of the python node\r\ninput0 = IN[0]\r\n\r\n#_________________________________________________\r\nif len(IN) > 1:\r\n    options = IN[1]\r\n    wfm_in = options[\"wfm_in\"] if \"wfm_in\" in options.keys() else 0\r\n    if not bool(wfm_in) or type(wfm_in)!=int:    \r\n        try:\r\n            wfm_in = int(wfm_in)\r\n        except:\r\n            wfm_in = 0               \r\nelse: wfm_in = 0\r\n\r\n\r\n# Allows nested lists / dicts / tuples in the input 0. Two dimensonal only. Please take care if your input are strings\r\nif not hasattr(input0, '__iter__'):\r\n    to_be_flattend = True\r\n    input0 = [input0]\r\n    out0 = [[]]\r\nelse: \r\n    to_be_flattend = False\r\n    out0 = []\r\n\r\n#_________________________________________________\r\ntry:\r\n    # your code here\r\n    1+1\r\n\r\n\r\n#_________________________________________________\r\n\r\n    \r\nexcept (ZeroDivisionError, ValueError, IndexError, AttributeError, NameError) as err:\r\n    debug.update({\"Error\":err})\r\ndebug.update({\"wfm_out\" : wfm_in +1})\r\n#TransactionManager.Instance.TransactionTaskDone()\r\nif to_be_flattend==True:\r\n    out0 = out0[0]\r\n\r\n# Define Output of Dynamo Python Node\r\nOUT = out0, debug\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ff9ad7ed90224281b82f3573cf045efe",
      "Inputs": [
        {
          "Id": "5d6878caa02d4d9794ed682628c1e62b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "277547b0890b45f5bd54fe661172c707",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    }
  ],
  "Connectors": [
    {
      "Start": "02afe442df684b99a1ede3291bbd7399",
      "End": "99967937c4e241f89a234c2c26057778",
      "Id": "72d38016d4cc45049f0e47ce605130fa",
      "IsHidden": "False"
    },
    {
      "Start": "277547b0890b45f5bd54fe661172c707",
      "End": "5deef97b8c7745c29e951a04f1f5bf79",
      "Id": "05dd16beb5f4463cb08a4efcd33a65f6",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Hintergrundvorschau",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "833d4823542644eea5b5bd00c0c5b33b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 702.15231369022615,
        "Y": -17.468713993207189
      },
      {
        "Id": "2a6daab1d25746b7a8b88c26be10401d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 696.57497676676212,
        "Y": -183.801663254084
      },
      {
        "Id": "a9227f020aae47a68b8746e9f9e97f8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -37.3908009610584,
        "Y": -206.75561233741271
      },
      {
        "Id": "ff9ad7ed90224281b82f3573cf045efe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 481.42994748796082,
        "Y": -15.58171021356182
      }
    ],
    "Annotations": [],
    "X": -20.804259067171643,
    "Y": 447.19955353590831,
    "Zoom": 0.91556228528122607
  }
}